#pragma checksum "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2dcda0d0cdddafa96d6db01429ad4f905bc711c9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\_ViewImports.cshtml"
using PhoneBookProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\_ViewImports.cshtml"
using PhoneBookProject.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
using ReflectionIT.Mvc.Paging;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2dcda0d0cdddafa96d6db01429ad4f905bc711c9", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b7bbb0c93b3bb8027b26690aad5b7680be9399a5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ReflectionIT.Mvc.Paging.IPagingList<PhoneBookProject.Models.DataPhonelist>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 6 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
  
    ViewBag.Title = "صفحه نخست";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 11 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
 if (Model.Count() > 0)
{


#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <section class=""content"">
        <div class=""row"">



            <div class=""box"">
                <div class=""box-header"">
                    <h3 class=""box-title"">دفترچه تلفن</h3>
                </div>
                <!-- /.box-header -->
                <div class=""box-body"">
                    <div id=""example1_wrapper"" class=""dataTables_wrapper form-inline dt-bootstrap"">
                        <div class=""row"">

");
            WriteLiteral(@"                        <div class=""row"">
                            <div class=""col-sm-12"">
                                <table id=""example1"" class=""table table-bordered table-striped dataTable"" role=""grid"" aria-describedby=""example1_info"">
                                    <thead>
                                        <tr>
                                            <th>نام</th>
                                            <th>نام خانوادگی</th>
                                            <th>معاونت</th>
                                            <th>تلفن</th>
                                            <th>تلفن همراه</th>

                                        </tr>
                                    </thead>
                                    <tbody>

");
#nullable restore
#line 66 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                         foreach (var obj in Model)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <tr>\r\n                                                <td width=\"30%\">");
#nullable restore
#line 69 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                                           Write(obj.Fname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td width=\"20%\">");
#nullable restore
#line 70 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                                           Write(obj.Lname);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td width=\"15%\">");
#nullable restore
#line 71 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                                           Write(obj.ListOfDepartmant);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td width=\"20%\">");
#nullable restore
#line 72 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                                           Write(obj.PhoneNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                <td width=\"15%\">");
#nullable restore
#line 73 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                                           Write(obj.CellPhone);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                            </tr>\r\n");
#nullable restore
#line 75 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                    </tbody>

                                </table>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>


");
            WriteLiteral("\r\n            </div>\r\n\r\n\r\n\r\n    </section>\r\n");
#nullable restore
#line 96 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
}

else
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <p>No Data Exists.</p>\r\n");
#nullable restore
#line 101 "D:\Asp.Net Core Mvc\PhoneBookProject\PhoneBookProject - 2021-12-05\PhoneBookProject\Views\Home\Index.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<!-- jQuery 3 -->
<script src=""../../bower_components/jquery/dist/jquery.min.js""></script>
<!-- Bootstrap 3.3.7 -->
<script src=""../../bower_components/bootstrap/dist/js/bootstrap.min.js""></script>
<!-- ChartJS -->
<script src=""../../bower_components/Chart.js/Chart.js""></script>
<!-- FastClick -->
<script src=""../../bower_components/fastclick/lib/fastclick.js""></script>
<!-- AdminLTE App -->
<script src=""../../dist/js/adminlte.min.js""></script>
<!-- AdminLTE for demo purposes -->
<script src=""../../dist/js/demo.js""></script>
<!-- page script -->

<!-- DataTables -->
<script src=""../../bower_components/datatables.net/js/jquery.dataTables.min.js""></script>
<script src=""../../bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js""></script>
<!-- SlimScroll -->
<script src=""../../bower_components/jquery-slimscroll/jquery.slimscroll.min.js""></script>


<script>
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS");
            WriteLiteral(@"
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $('#areaChart').get(0).getContext('2d')
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas)

        var areaChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [
                {
                    label: 'Electronics',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
                {
                ");
            WriteLiteral(@"    label: 'Digital Goods',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: [28, 48, 40, 19, 86, 27, 90]
                }
            ]
        }

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolea");
            WriteLiteral(@"n - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            /");
            WriteLiteral(@"/String - A legend template
            legendTemplate: '<ul class=""<%=name.toLowerCase()%>-legend""><% for (var i=0; i<datasets.length; i++){%><li><span style=""background-color:<%=datasets[i].lineColor%>""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        }

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions)

        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
        var lineChart = new Chart(lineChartCanvas)
        var lineChartOptions = areaChartOptions
        lineChartOptions.datasetFill = false
        lineChart.Line(areaChartData, lineChar");
            WriteLiteral(@"tOptions)

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
        var pieChart = new Chart(pieChartCanvas)
        var PieData = [
            {
                value: 700,
                color: '#f56954',
                highlight: '#f56954',
                label: 'Chrome'
            },
            {
                value: 500,
                color: '#00a65a',
                highlight: '#00a65a',
                label: 'IE'
            },
            {
                value: 400,
                color: '#f39c12',
                highlight: '#f39c12',
                label: 'FireFox'
            },
            {
                value: 600,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Safari'
            },
            {
                value: 300,
               ");
            WriteLiteral(@" color: '#3c8dbc',
                highlight: '#3c8dbc',
                label: 'Opera'
            },
            {
                value: 100,
                color: '#d2d6de',
                highlight: '#d2d6de',
                label: 'Navigator'
            }
        ]
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: '#fff',
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: 'easeOutBounce',
            //Boolean - Whether we animate the rotation of the Doughnut
    ");
            WriteLiteral(@"        animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: '<ul class=""<%=name.toLowerCase()%>-legend""><% for (var i=0; i<segments.length; i++){%><li><span style=""background-color:<%=segments[i].fillColor%>""></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions)

        //-------------
        //- BAR CHART -
        //-------------
        var barChartCanvas = $('#barC");
            WriteLiteral(@"hart').get(0).getContext('2d')
        var barChart = new Chart(barChartCanvas)
        var barChartData = areaChartData
        barChartData.datasets[1].fillColor = '#00a65a'
        barChartData.datasets[1].strokeColor = '#00a65a'
        barChartData.datasets[1].pointColor = '#00a65a'
        var barChartOptions = {
            //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
            scaleBeginAtZero: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: true,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            /");
            WriteLiteral(@"/Boolean - If there is a stroke on each bar
            barShowStroke: true,
            //Number - Pixel width of the bar stroke
            barStrokeWidth: 2,
            //Number - Spacing between each of the X value sets
            barValueSpacing: 5,
            //Number - Spacing between data sets within X values
            barDatasetSpacing: 1,
            //String - A legend template
            legendTemplate: '<ul class=""<%=name.toLowerCase()%>-legend""><% for (var i=0; i<datasets.length; i++){%><li><span style=""background-color:<%=datasets[i].fillColor%>""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to make the chart responsive
            responsive: true,
            maintainAspectRatio: true
        }

        barChartOptions.datasetFill = false
        barChart.Bar(barChartData, barChartOptions)
    })
</script>




<script>
    $(function () {
        $('#example1').DataTable()
        $('#example2').Da");
            WriteLiteral("taTable({\r\n            \'paging\': true,\r\n            \'lengthChange\': false,\r\n            \'searching\': false,\r\n            \'ordering\': true,\r\n            \'info\': true,\r\n            \'autoWidth\': false\r\n        })\r\n    })\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ReflectionIT.Mvc.Paging.IPagingList<PhoneBookProject.Models.DataPhonelist>> Html { get; private set; }
    }
}
#pragma warning restore 1591
